import { useState, useEffect } from "react";
import Icon from "@/components/ui/icon";

const Interesting = () => {
  const [activeCard, setActiveCard] = useState<number | null>(null);
  const [currentFact, setCurrentFact] = useState(0);
  const [isFlipping, setIsFlipping] = useState(false);

  const facts = [
    {
      emoji: "ü§ù",
      title: "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∂–∏–≤–æ—Ç–Ω—ã–µ",
      description: "–ö–∞–ø–∏–±–∞—Ä—ã ‚Äî —Å–∞–º—ã–µ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –≤ –º–∏—Ä–µ",
      fullText:
        "–ö–∞–ø–∏–±–∞—Ä—ã ‚Äî –æ—á–µ–Ω—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –∂–∏–≤–æ—Ç–Ω—ã–µ. –û–Ω–∏ –∂–∏–≤—É—Ç –≥—Ä—É–ø–ø–∞–º–∏ –ø–æ 10‚Äî30 –æ—Å–æ–±–µ–π –∏ –∏–º–µ—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ —Å—Ç–∞–µ, –º–∏—Ä–æ–ª—é–±–∏–≤–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º. –ì—Ä—ã–∑—É–Ω—ã –æ—Å–æ–±—ã–º –æ–±—Ä–∞–∑–æ–º –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –≤–Ω–∏–º–∞–Ω–∏–µ: –æ–±–Ω–∏–º–∞—é—Ç—Å—è –∏ –¥–∞–∂–µ —Å–ø—è—Ç –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–µ.",
      funFact: "–ö–∞–ø–∏–±–∞—Ä—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ—Ä—É—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π!",
      color: "from-pink-100 to-rose-100",
      borderColor: "border-pink-200",
      textColor: "text-pink-700",
      iconBg: "bg-pink-200",
      hoverColor: "hover:from-pink-200 hover:to-rose-200",
    },
    {
      emoji: "üèä‚Äç‚ôÄÔ∏è",
      title: "–õ—é–±–∏—Ç–µ–ª–∏ –≤–æ–¥—ã",
      description: "–ú–æ–≥—É—Ç –∑–∞–¥–µ—Ä–∂–∏–≤–∞—Ç—å –¥—ã—Ö–∞–Ω–∏–µ –ø–æ–¥ –≤–æ–¥–æ–π –¥–æ 5 –º–∏–Ω—É—Ç",
      fullText:
        "–ö–∞–ø–∏–±–∞—Ä—ã —Å–ª–∞–≤—è—Ç—Å—è —Å–≤–æ–µ–π –ª—é–±–æ–≤—å—é –∫ –≤–æ–¥–æ—ë–º–∞–º, –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –∏—Ö —á–∞—Å—Ç–æ –Ω–∞–∑—ã–≤–∞—é—Ç –≤–æ–¥—è–Ω—ã–º–∏ —Å–≤–∏–Ω–∫–∞–º–∏. –£ –Ω–∏—Ö –¥–∞–∂–µ –Ω–∞ –ª–∞–ø–∞—Ö –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–ø–æ–Ω–∫–∏ –¥–ª—è –ø–ª–∞–≤–∞–Ω–∏—è. –í –Ø–ø–æ–Ω–∏–∏ –≤ Izu Shaboten Park –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –≤–æ–¥–æ—ë–º –¥–ª—è –∫—É–ø–∞–Ω–∏—è –∫–∞–ø–∏–±–∞—Ä –≤ —Å—Ç–∏–ª–µ —è–ø–æ–Ω—Å–∫–∏—Ö –∫—É–ø–∞–ª–µ–Ω ¬´–û–Ω—Å—ç–Ω¬ª —Å –ª–∏–º–æ–Ω–∞–º–∏ –∏ –º–∞–Ω–¥–∞—Ä–∏–Ω–∞–º–∏.",
      funFact: "–û–Ω–∏ –ª—é–±—è—Ç –≥–æ—Ä—è—á–∏–µ –≤–∞–Ω–Ω—ã —Ç–∞–∫ –∂–µ, –∫–∞–∫ —è–ø–æ–Ω—Ü—ã!",
      color: "from-blue-100 to-cyan-100",
      borderColor: "border-blue-200",
      textColor: "text-blue-700",
      iconBg: "bg-blue-200",
      hoverColor: "hover:from-blue-200 hover:to-cyan-200",
    },
    {
      emoji: "üéµ",
      title: "–°–≤–æ–π —è–∑—ã–∫ –æ–±—â–µ–Ω–∏—è",
      description: "–ò—Å–ø–æ–ª—å–∑—É—é—Ç –±–æ–ª–µ–µ 10 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–≤—É–∫–æ–≤ –¥–ª—è –æ–±—â–µ–Ω–∏—è",
      fullText:
        "–ì—Ä—ã–∑—É–Ω—ã –æ–±—â–∞—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Å–≤–æ–µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∑–≤—É–∫–∏: —Å–≤–∏—Å—Ç, –ª–∞–π, –∫—É–¥–∞—Ö—Ç–∞–Ω—å–µ –∏ —â–µ–ª—á–∫–∏. –≠—Ç–∏ –∑–≤—É–∫–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –∏–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏, –æ–± –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –æ –¥—Ä—É–≥–∏—Ö –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö.",
      funFact: "–û–Ω–∏ –º—É—Ä–ª—ã–∫–∞—é—Ç –æ—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è, –∫–∞–∫ –∫–æ—à–∫–∏!",
      color: "from-green-100 to-emerald-100",
      borderColor: "border-green-200",
      textColor: "text-green-700",
      iconBg: "bg-green-200",
      hoverColor: "hover:from-green-200 hover:to-emerald-200",
    },
    {
      emoji: "üçÉ",
      title: "–í–µ–≥–∞–Ω—ã –ø–æ –ø—Ä–∏—Ä–æ–¥–µ",
      description: "–ï–¥—è—Ç —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Ç–µ–Ω–∏—è –∏ –º–æ–≥—É—Ç –≤–µ—Å–∏—Ç—å –¥–æ 65 –∫–≥",
      fullText:
        "–ö–∞–ø–∏–±–∞—Ä—ã ‚Äî —Å—Ç—Ä–æ–≥–∏–µ –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Ü—ã. –û–Ω–∏ –ø–∏—Ç–∞—é—Ç—Å—è —Ç—Ä–∞–≤–æ–π, –≤–æ–¥–Ω—ã–º–∏ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏, –∫–æ—Ä–æ–π –∏ —Ñ—Ä—É–∫—Ç–∞–º–∏. –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —á—Ç–æ –æ–Ω–∏ —á–∞—Å—Ç–æ –µ–¥—è—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —ç–∫—Å–∫—Ä–µ–º–µ–Ω—Ç—ã, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤ ‚Äî —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–ø—Ä–æ—Ñ–∞–≥–∏—è.",
      funFact: "–û–Ω–∏ –µ–¥—è—Ç –¥–æ 8 –∫–≥ —Ä–∞—Å—Ç–µ–Ω–∏–π –≤ –¥–µ–Ω—å!",
      color: "from-orange-100 to-amber-100",
      borderColor: "border-orange-200",
      textColor: "text-orange-700",
      iconBg: "bg-orange-200",
      hoverColor: "hover:from-orange-200 hover:to-amber-200",
    },
    {
      emoji: "üëë",
      title: "–°–∞–º—ã–µ –∫—Ä—É–ø–Ω—ã–µ –≥—Ä—ã–∑—É–Ω—ã",
      description:
        "–†–∞–∑–º–µ—Ä–æ–º —Å –±–æ–ª—å—à—É—é —Å–æ–±–∞–∫—É, –Ω–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º –∫–∞–∫ —É –¥–∑–µ–Ω-–º–∞—Å—Ç–µ—Ä–∞",
      fullText:
        "–ö–∞–ø–∏–±–∞—Ä—ã ‚Äî —Å–∞–º—ã–µ –∫—Ä—É–ø–Ω—ã–µ –≥—Ä—ã–∑—É–Ω—ã –≤ –º–∏—Ä–µ. –í–∑—Ä–æ—Å–ª—ã–µ –æ—Å–æ–±–∏ –º–æ–≥—É—Ç –¥–æ—Å—Ç–∏–≥–∞—Ç—å 1.3 –º–µ—Ç—Ä–∞ –≤ –¥–ª–∏–Ω—É –∏ –≤–µ—Å–∏—Ç—å –¥–æ 65 –∫–≥. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –≤–Ω—É—à–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã, –æ–Ω–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —Å–ø–æ–∫–æ–π–Ω—ã–µ –∏ –º–∏—Ä–æ–ª—é–±–∏–≤—ã–µ.",
      funFact: "–ò—Ö –Ω–∞–∑—ã–≤–∞—é—Ç '–¥–∑–µ–Ω-–º–∞—Å—Ç–µ—Ä–∞–º–∏' –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –º–∏—Ä–∞!",
      color: "from-purple-100 to-violet-100",
      borderColor: "border-purple-200",
      textColor: "text-purple-700",
      iconBg: "bg-purple-200",
      hoverColor: "hover:from-purple-200 hover:to-violet-200",
    },
    {
      emoji: "üåç",
      title: "–ñ–∏—Ç–µ–ª–∏ –Æ–∂–Ω–æ–π –ê–º–µ—Ä–∏–∫–∏",
      description: "–û–±–∏—Ç–∞—é—Ç –æ—Ç –í–µ–Ω–µ—Å—É—ç–ª—ã –¥–æ –ê—Ä–≥–µ–Ω—Ç–∏–Ω—ã",
      fullText:
        "–í –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥–µ –∫–∞–ø–∏–±–∞—Ä—ã –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –Æ–∂–Ω–æ–π –ê–º–µ—Ä–∏–∫–µ. –û–Ω–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç –∂–∏—Ç—å –≤–æ–∑–ª–µ –≤–æ–¥–æ—ë–º–æ–≤ –≤ —Å–∞–≤–∞–Ω–Ω–∞—Ö, —Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏—Ö –ª–µ—Å–∞—Ö –∏ –±–æ–ª–æ—Ç–∞—Ö. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏–∑-–∑–∞ –æ—Ö–æ—Ç—ã –∏ —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è —Å—Ä–µ–¥—ã –æ–±–∏—Ç–∞–Ω–∏—è –∏—Ö –ø–æ–ø—É–ª—è—Ü–∏—è —Å–æ–∫—Ä–∞—â–∞–µ—Ç—Å—è.",
      funFact: "–í –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö –∏—Ö —Å—á–∏—Ç–∞—é—Ç –¥–µ–ª–∏–∫–∞—Ç–µ—Å–æ–º!",
      color: "from-teal-100 to-cyan-100",
      borderColor: "border-teal-200",
      textColor: "text-teal-700",
      iconBg: "bg-teal-200",
      hoverColor: "hover:from-teal-200 hover:to-cyan-200",
    },
  ];

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ —Ñ–∞–∫—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
  useEffect(() => {
    const interval = setInterval(() => {
      setIsFlipping(true);
      setTimeout(() => {
        setCurrentFact((prev) => (prev + 1) % facts.length);
        setIsFlipping(false);
      }, 250);
    }, 5000);

    return () => clearInterval(interval);
  }, [facts.length]);

  const handleCardClick = (index: number) => {
    setActiveCard(activeCard === index ? null : index);
  };

  const handleFactNavigation = (direction: "prev" | "next") => {
    setIsFlipping(true);
    setTimeout(() => {
      if (direction === "next") {
        setCurrentFact((prev) => (prev + 1) % facts.length);
      } else {
        setCurrentFact((prev) => (prev - 1 + facts.length) % facts.length);
      }
      setIsFlipping(false);
    }, 250);
  };

  return (
    <section
      id="interesting"
      className="py-20 bg-gradient-to-br from-slate-50 via-blue-50 to-purple-50 relative overflow-hidden"
    >
      {/* –ü–ª–∞–≤–∞—é—â–∏–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 pointer-events-none">
        <div className="absolute top-20 left-10 text-8xl opacity-10 animate-bounce">
          üêπ
        </div>
        <div className="absolute top-60 right-20 text-6xl opacity-10 animate-pulse delay-1000">
          üí´
        </div>
        <div className="absolute bottom-20 left-20 text-7xl opacity-10 animate-bounce delay-2000">
          üåä
        </div>
        <div className="absolute bottom-60 right-10 text-5xl opacity-10 animate-pulse delay-500">
          üéµ
        </div>
      </div>

      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-16">
          <div className="inline-flex items-center justify-center w-24 h-24 bg-gradient-to-br from-purple-200 to-blue-200 rounded-full mb-6 shadow-lg">
            <span className="text-4xl animate-bounce">ü§ì</span>
          </div>
          <h2 className="text-4xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-600 via-blue-600 to-teal-600 mb-4">
            –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–ø–∏–±–∞—Ä—ã
          </h2>
          <div className="w-40 h-1 bg-gradient-to-r from-purple-300 via-blue-300 to-teal-300 mx-auto mb-6"></div>
          <p className="text-lg text-slate-600 max-w-3xl mx-auto">
            –ü–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –ø–æ–±–ª–∏–∂–µ —Å —Å–∞–º—ã–º–∏ —Å–ø–æ–∫–æ–π–Ω—ã–º–∏ –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º–∏ —Å—É—â–µ—Å—Ç–≤–∞–º–∏
            –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ! üåç
          </p>
        </div>

        {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—É—Å–µ–ª—å —Ñ–∞–∫—Ç–æ–≤ */}
        <div className="max-w-4xl mx-auto mb-16">
          <div className="bg-white/80 backdrop-blur-sm rounded-3xl p-8 shadow-xl border border-slate-200 relative">
            <div className="flex items-center justify-between mb-6">
              <button
                onClick={() => handleFactNavigation("prev")}
                className="w-12 h-12 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center text-white hover:from-purple-600 hover:to-blue-600 transition-all duration-300 hover:scale-110"
              >
                <Icon name="ChevronLeft" size={20} />
              </button>

              <div className="text-center flex-1">
                <div className="flex justify-center space-x-2 mb-4">
                  {facts.map((_, index) => (
                    <button
                      key={index}
                      onClick={() => {
                        setIsFlipping(true);
                        setTimeout(() => {
                          setCurrentFact(index);
                          setIsFlipping(false);
                        }, 250);
                      }}
                      className={`w-3 h-3 rounded-full transition-all duration-300 ${
                        index === currentFact
                          ? "bg-gradient-to-r from-purple-500 to-blue-500 scale-125"
                          : "bg-slate-300 hover:bg-slate-400"
                      }`}
                    />
                  ))}
                </div>
                <div
                  className={`transition-all duration-250 ${isFlipping ? "opacity-0 scale-95" : "opacity-100 scale-100"}`}
                >
                  <div className="text-6xl mb-4 animate-pulse">
                    {facts[currentFact].emoji}
                  </div>
                  <h3 className="text-2xl font-bold text-slate-700 mb-2">
                    {facts[currentFact].title}
                  </h3>
                  <p className="text-slate-600 mb-4">
                    {facts[currentFact].description}
                  </p>
                  <div className="bg-gradient-to-r from-purple-50 to-blue-50 rounded-2xl p-4 border border-purple-100">
                    <div className="flex items-center justify-center mb-2">
                      <Icon
                        name="Lightbulb"
                        size={16}
                        className="text-purple-600 mr-2"
                      />
                      <span className="text-sm font-medium text-purple-700">
                        –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç
                      </span>
                    </div>
                    <p className="text-purple-600 text-sm font-medium">
                      {facts[currentFact].funFact}
                    </p>
                  </div>
                </div>
              </div>

              <button
                onClick={() => handleFactNavigation("next")}
                className="w-12 h-12 bg-gradient-to-r from-blue-500 to-teal-500 rounded-full flex items-center justify-center text-white hover:from-blue-600 hover:to-teal-600 transition-all duration-300 hover:scale-110"
              >
                <Icon name="ChevronRight" size={20} />
              </button>
            </div>
          </div>
        </div>

        {/* –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-6xl mx-auto">
          {facts.map((fact, index) => (
            <div
              key={index}
              className={`bg-gradient-to-br ${fact.color} ${fact.hoverColor} rounded-3xl p-6 shadow-lg border ${fact.borderColor} hover:shadow-2xl hover:-translate-y-2 transition-all duration-500 cursor-pointer group relative overflow-hidden`}
              onClick={() => handleCardClick(index)}
            >
              {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
              <div className="absolute inset-0 bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>

              <div className="relative z-10">
                <div className="flex items-center justify-between mb-4">
                  <div
                    className={`${fact.iconBg} rounded-2xl p-3 group-hover:scale-110 group-hover:rotate-12 transition-all duration-300`}
                  >
                    <span className="text-2xl">{fact.emoji}</span>
                  </div>
                  <div className="flex items-center">
                    <Icon
                      name={activeCard === index ? "ChevronUp" : "ChevronDown"}
                      size={16}
                      className={`${fact.textColor} transition-transform duration-300`}
                    />
                  </div>
                </div>

                <h3 className={`text-lg font-bold ${fact.textColor} mb-2`}>
                  {fact.title}
                </h3>

                <p className={`${fact.textColor} text-sm opacity-80 mb-3`}>
                  {fact.description}
                </p>

                <div
                  className={`transition-all duration-500 ${
                    activeCard === index
                      ? "max-h-96 opacity-100"
                      : "max-h-0 opacity-0"
                  } overflow-hidden`}
                >
                  <div className="bg-white/50 rounded-xl p-4 border border-white/30">
                    <p
                      className={`${fact.textColor} text-sm leading-relaxed mb-3`}
                    >
                      {fact.fullText}
                    </p>
                    <div className="flex items-center justify-between">
                      <span className={`text-xs ${fact.textColor} font-medium`}>
                        üí° –ê –∑–Ω–∞–ª–∏ –ª–∏ –≤—ã?
                      </span>
                      <Icon
                        name="Heart"
                        size={14}
                        className={`${fact.textColor}`}
                      />
                    </div>
                    <p className={`text-xs ${fact.textColor} mt-2 font-medium`}>
                      {fact.funFact}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é */}
        <div className="mt-16 text-center">
          <div className="bg-gradient-to-r from-purple-100 via-blue-100 to-teal-100 rounded-3xl p-8 border border-purple-200 shadow-lg max-w-4xl mx-auto">
            <div className="flex items-center justify-center mb-4">
              <span className="text-4xl mr-3 animate-bounce">ü•∞</span>
              <h3 className="text-2xl font-bold text-slate-700">
                –¢–µ–ø–µ—Ä—å –≤—ã –∑–Ω–∞–µ—Ç–µ –∫–∞–ø–∏–±–∞—Ä –ª—É—á—à–µ!
              </h3>
            </div>
            <p className="text-slate-600 mb-6 max-w-2xl mx-auto">
              –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –∫ –Ω–∞–º –≤ –∫–∞—Ñ–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –µ—â–µ –±–æ–ª—å—à–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö
              —Ñ–∞–∫—Ç–æ–≤ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —ç—Ç–∏—Ö –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö! üêπ‚òï
            </p>
            <div className="flex items-center justify-center space-x-6 text-sm text-slate-500">
              <div className="flex items-center">
                <Icon
                  name="BookOpen"
                  size={16}
                  className="mr-1 text-purple-500"
                />
                –£–∑–Ω–∞–µ–º —Ñ–∞–∫—Ç—ã
              </div>
              <div className="text-purple-300">‚Üí</div>
              <div className="flex items-center">
                <Icon name="Coffee" size={16} className="mr-1 text-blue-500" />
                –ü—å–µ–º –∫–æ—Ñ–µ
              </div>
              <div className="text-blue-300">‚Üí</div>
              <div className="flex items-center">
                <Icon name="Heart" size={16} className="mr-1 text-teal-500" />
                –ü–æ–º–æ–≥–∞–µ–º –∫–∞–ø–∏–±–∞—Ä–∞–º
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Interesting;
